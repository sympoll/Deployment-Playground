apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: user-db
  name: user-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-db
  template:
    metadata:
      labels:
        app: user-db
    spec:
      containers:
        - image: postgres:16.2
          name: postgres
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          ports:
            - containerPort: 5433
          env:
            - name: PGPORT
              value: "5433"
            - name: POSTGRES_DB
              value: userdb
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: user-db-secrets
          volumeMounts:
            - mountPath: /var/lib/user-db
              name: user-db-data
            - mountPath: /docker-entrypoint-initdb.d
              name: user-db-init-config
      volumes:
        - name: user-db-data
          persistentVolumeClaim:
            claimName: user-db-pvc
        - name: user-db-init-config
          configMap:
            name: user-db-init-config

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: user-db
  name: user-db
spec:
  ports:
    - name: 5433-5433
      port: 5433
      protocol: TCP
      targetPort: 5433
  selector:
    app: user-db
  type: ClusterIP

---
apiVersion: v1
data:
  POSTGRES_PASSWORD: cG9zZ3Jlcw==
kind: Secret
metadata:
  name: user-db-secrets

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: user-db-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: "standard"
  hostPath:
    path: /data/user-db

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: user-db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: "standard"
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-db-init-config
data:
  init.sql: |
    -- User Management Service Schema
    CREATE TABLE users (
      user_id              UUID PRIMARY KEY,
      username             VARCHAR(255) UNIQUE NOT NULL,
      email                VARCHAR(255) NOT NULL,
      profile_picture_url  VARCHAR(255),
      profile_banner_url   VARCHAR(255),
      created_at           TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );
      


    -- Insert sample data into the users table
    INSERT INTO users (user_id, username, email, created_at) VALUES
    ('b1f8e925-2129-473d-bc09-b3a2a331f839', 'Roytol12', 'roytol12@gmail.com', '2024-08-14 10:00:00'),
    ('bcdbbd68-8975-41d9-bd55-4a30a9f8e5f7', 'Idansh', 'idan.sh2@icloud.com', '2024-08-14 10:05:00'),
    ('ca98fcb8-28b3-4708-becd-9114c9bba4b3', 'Ronenii', 'Ronen.Glm@gmail.com', '2024-08-14 10:10:00'),
    ('9edc3d7f-b5cb-4e8b-9a9b-3b4b4d91bf0b', 'BeBo', 'yonathanle@mta.ac.il', '2024-08-14 10:15:00');
