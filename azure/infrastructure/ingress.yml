# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress
#   annotations:
#     kubernetes.io/ingress.class: "gce" # For GCP, using GCE ingress
#     nginx.ingress.kubernetes.io/use-regex: "true"
#     nginx.ingress.kubernetes.io/enable-cors: "true"
#     nginx.ingress.kubernetes.io/cors-allow-origin: "http://sympoll.ddns.net"
#     nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
#     nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
#     nginx.ingress.kubernetes.io/cors-allow-credentials: "true"

# spec:
#   rules:
#     - host: sympoll.ddns.net
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: frontend
#                 port:
#                   number: 8080
#           - path: /api(/|$)(.*)
#             pathType: ImplementationSpecific
#             backend:
#               service:
#                 name: api-gateway
#                 port:
#                   number: 8081
#     - host: auth-sympoll.ddns.net
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: keycloak
#                 port:
#                   number: 8181

## Custom nginx container to replace ingress
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress
  template:
    metadata:
      labels:
        app: ingress
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - name: ingress-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: ingress.conf # Ensure the subPath matches the ConfigMap key
          resources:
            requests:
              cpu: "100m" # Minimum CPU request
              memory: "128Mi" # Minimum memory request
            limits:
              cpu: "200m" # Slightly higher CPU limit
              memory: "256Mi" # Slightly higher memory limit
      volumes:
        - name: ingress-config-volume
          configMap:
            name: ingress-config

---
apiVersion: v1
kind: Service
metadata:
  name: ingress
spec:
  type: LoadBalancer
  loadBalancerIP: 34.165.42.227
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: ingress

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-config
data:
  ingress.conf: |
    events {
        worker_connections 1024;
    }
    http {
        include       mime.types;
        default_type  application/octet-stream;

        upstream frontend {
            server frontend:8080;               # Define the upstream service
            keepalive 16;                       # Keep connections alive
        }

        upstream api-gateway {
            server api-gateway:8081;
            keepalive 16;
        }

        upstream keycloak {
            server keycloak:8181;
            keepalive 16;
        }

        server {
            listen 80;
            server_name sympoll.ddns.net;

            location / {
                proxy_pass http://frontend;
                proxy_connect_timeout 5s;
                proxy_read_timeout 30s;
                proxy_send_timeout 30s;
                proxy_next_upstream error timeout http_502 http_503 http_504;
                proxy_next_upstream_timeout 0;
                proxy_next_upstream_tries 0;

                # Update CSP to include 'auth-sympoll.ddns.net' and 'keycloak'
                add_header Content-Security-Policy "frame-src 'self' http://auth-sympoll.ddns.net http://keycloak/;";
            }

            location /api/ {
                proxy_pass http://api-gateway;
                proxy_connect_timeout 5s;
                proxy_read_timeout 30s;
                proxy_send_timeout 30s;
                proxy_next_upstream error timeout http_502 http_503 http_504;
                proxy_next_upstream_timeout 0;
                proxy_next_upstream_tries 0;

                # Update CSP to include 'auth-sympoll.ddns.net' and 'keycloak'
                add_header Content-Security-Policy "frame-src 'self' http://auth-sympoll.ddns.net http://keycloak/;";
            }
        }

        server {
            listen 80;
            server_name auth-sympoll.ddns.net;

            location / {
                proxy_pass http://keycloak;
                proxy_connect_timeout 10s;
                proxy_read_timeout 60s;
                proxy_send_timeout 60s;
                
                # Set CORS headers
                add_header 'Access-Control-Allow-Origin' 'http://sympoll.ddns.net' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;

                # Handle preflight requests
                if ($request_method = 'OPTIONS') {
                    add_header 'Access-Control-Allow-Origin' 'http://sympoll.ddns.net' always;
                    add_header 'Access-Control-Allow-Credentials' 'true' always;
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                    add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With' always;
                    add_header 'Content-Length' 0;
                    add_header 'Content-Type' 'text/plain charset=UTF-8';
                    return 204;
                }
            }
        }
      }
